openapi: 3.0.1
info:
  title: IFome
  description:
    Sistema voltado para a cantina de serviço particular localizada no campus Caicó do IFRN. O objetivo é funcionar como um "menu online" para estudantes e servidores do instituto, disponibilizando previamente todas os alimentos e bebidas acessíveis no ambiente. Isso permite que os clientes tenham um pré-atendimento através de uma reserva, garantindo maior agilidade na recepção presencial e reduzindo filas e aglomerações.
  version: '1.1'
servers:
  - url: http://{host}:{porta}/api
    variables:
      host:
        default: localhost
      porta:
        default: '8000'
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

paths:
  /alimentos/:
    get:
      summary: Retorna a lista de alimentos cadastrados.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nome:
                      type: string
                    composicao:
                      type: string
                    quantidade_estoque:
                      type: integer
                    valor:
                      type: number
                  required:
                    - nome
                    - composicao
                    - quantidade_estoque
                    - valor
    post:
      summary: Cadastra alimento.
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                composicao:
                  type: string
                quantidade_estoque:
                  type: integer
                valor:
                  type: number
              required:
                - nome
                - composicao
                - quantidade_estoque
                - valor
      responses:
        '201':
          description: Criado com sucesso.
        '400':
          description: Parâmetros inválidos.
        '403':
          description: Usuário não está logado.
  /alimentos/{id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      summary: Retorna um alimento cadastrado.
      responses:
        '200':
          description: OK. Alimento encontrado.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  composicao:
                    type: string
                  quantidade_estoque:
                    type: integer
                  valor:
                    type: number
                required:
                  - nome
                  - composicao
                  - quantidade_estoque
                  - valor
        '404':
          description: Alimento não encontrado.
    put:
      security:
        - bearerAuth: []
      summary: Edita alimento.
      responses:
        '200':
          description: OK. Alimento alterado com sucesso.
        '400':
          description: Parâmetros inválidos.
        '403':
          description: Usuário não tem permissão ou não está logado.
        '404':
          description: Alimento não encontrado.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                composicao:
                  type: string
                quantidade_estoque:
                  type: integer
                valor:
                  type: number
              required:
                - nome
                - composicao
                - quantidade_estoque
                - valor
    delete:
      security:
        - bearerAuth: []
      summary: Apaga alimento.
      responses:
        '200':
          description: OK. Alimento excluído com sucesso.
        '403':
          description: Usuário não tem permissão ou não está logado.
        '404':
          description: Alimento não encontrado.

  /bebidas/:
    get:
      summary: Retorna a lista de bebidas cadastradas.
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    nome:
                      type: string
                    quantidade_estoque:
                      type: integer
                    valor:
                      type: number
                  required:
                    - nome
                    - quantidade_estoque
                    - valor
    post:
      security:
          - bearerAuth: []
      summary: Cadastra bebidas.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                quantidade_estoque:
                  type: integer
                valor:
                  type: number
              required:
                - nome
                - quantidade_estoque
                - valor
      responses:
        '201':
          description: Criado com sucesso.
        '400':
          description: Parâmetros inválidos.
        '403':
          description: Usuário não está logado.
  /bebidas/{id}:
    parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
    get:
      summary: Retorna uma bebida cadastrada.
      responses:
        '200':
          description: OK. Bebida encontrada.
          content:
            application/json:
              schema:
                type: object
                properties:
                  nome:
                    type: string
                  quantidade_estoque:
                    type: integer
                  valor:
                    type: number
                required:
                  - nome
                  - quantidade_estoque
                  - valor
        '404':
          description: Bebida não encontrada.
    put:
      security:
        - bearerAuth: []
      summary: Edita bebida.
      responses:
        '200':
          description: OK. Bebida alterada com sucesso.
        '400':
          description: Parâmetros inválidos.
        '403':
          description: Usuário não tem permissão ou não está logado.
        '404':
          description: Bebida não encontrada.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                nome:
                  type: string
                quantidade_estoque:
                  type: integer
                valor:
                  type: number
              required:
                - nome
                - quantidade_estoque
                - valor
    delete:
      security:
        - bearerAuth: []
      summary: Apaga a bebida.
      responses:
        '200':
          description: OK. Bebida excluída com sucesso.
        '403':
          description: Usuário não tem permissão ou não está logado.
        '404':
          description: Bebida não encontrada.

